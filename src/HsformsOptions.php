<?php
/**
 * Generated by the WordPress Option Page generator
 * at http://jeremyhixon.com/wp-tools/option-page/
 */

class HsformsOptions {
	private $hsforms_options_options;

	public function __construct() {
		add_action( 'admin_menu', array( $this, 'hsforms_options_add_plugin_page' ) );
		add_action( 'admin_init', array( $this, 'hsforms_options_page_init' ) );
	}

	public function hsforms_options_add_plugin_page() {
		add_menu_page(
			'Hsforms', // page_title
			'Hsforms', // menu_title
			'manage_options', // capability
			'hsforms-options', // menu_slug
			array( $this, 'hsforms_options_create_admin_page' ), // function
			'dashicons-admin-generic', // icon_url
			81 // position
		);
		add_submenu_page(
			'hsforms-options',
			__( 'General Settings', 'wordpress-hsforms' ),
			__( 'General Settings', 'wordpress-hsforms' ),
			'manage_options',
			'hsforms-options'
		);
		add_submenu_page(
			'hsforms-options',
			__( 'TravelPeriods', 'wordpress-hsforms' ),
			__( 'TravelPeriods', 'wordpress-hsforms' ),
			'manage_options',
			'edit.php?post_type=travelperiod'
		);
		add_submenu_page(
			'hsforms-options',
			__( 'RateCodes', 'wordpress-hsforms' ),
			__( 'RateCodes', 'wordpress-hsforms' ),
			'manage_options',
			'edit.php?post_type=ratecode'
		);
		add_submenu_page(
			'hsforms-options',
			__( 'Segments', 'wordpress-hsforms' ),
			__( 'Segments', 'wordpress-hsforms' ),
			'manage_options',
			'edit.php?post_type=segment'
		);
	}

	public function hsforms_options_create_admin_page() {
		$this->hsforms_options_options = get_option( 'hsforms_options_option_name' ); ?>

		<div class="wrap">
			<h2><?php echo __('Hsforms Options', 'wordpress-hsforms'); ?></h2>
			<p></p>
			<?php settings_errors(); ?>

			<form method="post" action="options.php">
				<?php
					settings_fields( 'hsforms_options_option_group' );
					do_settings_sections( 'hsforms-options-admin' );
					submit_button();
				?>
			</form>
		</div>
	<?php }

	public function hsforms_options_page_init() {
		register_setting(
			'hsforms_options_option_group', // option_group
			'hsforms_options_option_name', // option_name
			array( $this, 'hsforms_options_sanitize' ) // sanitize_callback
		);

		add_settings_section(
			'hsforms_options_setting_section', // id
			__('General Settings', 'wordpress-hsforms'), // title
			array( $this, 'hsforms_options_section_info' ), // callback
			'hsforms-options-admin' // page
		);

		add_settings_field(
			'ibe_link', // id
			__('IBE Link', 'wordpress-hsforms'), // title
			array( $this, 'hsforms_ibe_link_callback' ), // callback
			'hsforms-options-admin', // page
			'hsforms_options_setting_section' // section
		);

		add_settings_field(
			'minimum_nights', // id
			__('Minimum Nights', 'wordpress-hsforms'), // title
			array( $this, 'hsforms_minimum_nights_callback' ), // callback
			'hsforms-options-admin', // page
			'hsforms_options_setting_section' // section
		);

		add_settings_field(
			'minimum_adults', // id
			__('Minimum Adults', 'wordpress-hsforms'), // title
			array( $this, 'hsforms_minimum_adults_callback' ), // callback
			'hsforms-options-admin', // page
			'hsforms_options_setting_section' // section
		);

		add_settings_field(
			'maximum_adults', // id
			__('Maximum Adults', 'wordpress-hsforms'), // title
			array( $this, 'hsforms_maximum_adults_callback' ), // callback
			'hsforms-options-admin', // page
			'hsforms_options_setting_section' // section
		);

		add_settings_field(
			'minimum_kinder', // id
			__('Minimum Kinder', 'wordpress-hsforms'), // title
			array( $this, 'hsforms_minimum_kinder_callback' ), // callback
			'hsforms-options-admin', // page
			'hsforms_options_setting_section' // section
		);

		add_settings_field(
			'maximum_kinder', // id
			__('Maximum Kinder', 'wordpress-hsforms'), // title
			array( $this, 'hsforms_maximum_kinder_callback' ), // callback
			'hsforms-options-admin', // page
			'hsforms_options_setting_section' // section
		);

		add_settings_field(
			'maximum_kinder_age', // id
			__('Maximum Kinder Age', 'wordpress-hsforms'), // title
			array( $this, 'hsforms_maximum_kinder_age_callback' ), // callback
			'hsforms-options-admin', // page
			'hsforms_options_setting_section' // section
		);

		add_settings_field(
			'minimum_rooms', // id
			__('Minimum Rooms', 'wordpress-hsforms'), // title
			array( $this, 'hsforms_minimum_rooms_callback' ), // callback
			'hsforms-options-admin', // page
			'hsforms_options_setting_section' // section
		);

		add_settings_field(
			'maximum_rooms', // id
			__('Maximum Rooms', 'wordpress-hsforms'), // title
			array( $this, 'hsforms_maximum_rooms_callback' ), // callback
			'hsforms-options-admin', // page
			'hsforms_options_setting_section' // section
		);

		add_settings_field(
			'minimum_persons', // id
			__('Minimum Persons', 'wordpress-hsforms'), // title
			array( $this, 'hsforms_minimum_persons_callback' ), // callback
			'hsforms-options-admin', // page
			'hsforms_options_setting_section' // section
		);

		add_settings_field(
			'maximum_persons', // id
			__('Maximum Persons', 'wordpress-hsforms'), // title
			array( $this, 'hsforms_maximum_persons_callback' ), // callback
			'hsforms-options-admin', // page
			'hsforms_options_setting_section' // section
		);

		add_settings_field(
			'button_label', // id
			__('Button Label', 'wordpress-hsforms'), // title
			array( $this, 'hsforms_button_label_callback' ), // callback
			'hsforms-options-admin', // page
			'hsforms_options_setting_section' // section
		);

		add_settings_field(
			'minlosbuffer', // id
			__('minLOS Buffer', 'wordpress-hsforms'), // title
			array( $this, 'hsforms_minlosbuffer_callback' ), // callback
			'hsforms-options-admin', // page
			'hsforms_options_setting_section' // section
		);

		add_settings_field(
			'days_allowed', // id
			__('Days Allowed', 'wordpress-hsforms'), // title
			array( $this, 'hsforms_days_allowed_callback' ), // callback
			'hsforms-options-admin', // page
			'hsforms_options_setting_section' // section
		);

		add_settings_field(
			'keepParams', // id
			__('Keep Parameters?', 'wordpress-hsforms'), // title
			array( $this, 'hsforms_keepParams_callback' ), // callback
			'hsforms-options-admin', // page
			'hsforms_options_setting_section' // section
		);

		add_settings_field(
			'allowedParams', // id
			__('Allowed Parameters', 'wordpress-hsforms'), // title
			array( $this, 'hsforms_allowedParams_callback' ), // callback
			'hsforms-options-admin', // page
			'hsforms_options_setting_section' // section
		);

		add_settings_field(
			'promocodeFlag', // id
			__('Show Promotion Code', 'wordpress-hsforms'), // title
			array( $this, 'hsforms_promocodeFlag_callback' ), // callback
			'hsforms-options-admin', // page
			'hsforms_options_setting_section' // section
		);

		add_settings_field(
			'addRoomFlag', // id
			__('Show Add Room Link?', 'wordpress-hsforms'), // title
			array( $this, 'hsforms_addRoomFlag_callback' ), // callback
			'hsforms-options-admin', // page
			'hsforms_options_setting_section' // section
		);

		add_settings_field(
			'ratecodeFlag', // id
			__('Show Ratecodes?', 'wordpress-hsforms'), // title
			array( $this, 'hsforms_ratecodeFlag_callback' ), // callback
			'hsforms-options-admin', // page
			'hsforms_options_setting_section' // section
		);

		add_settings_field(
			'segmentFlag', // id
			__('Show Segments?', 'wordpress-hsforms'), // title
			array( $this, 'hsforms_segmentFlag_callback' ), // callback
			'hsforms-options-admin', // page
			'hsforms_options_setting_section' // section
		);

		add_settings_field(
			'legendFlag', // id
			__('Show Legends?', 'wordpress-hsforms'), // title
			array( $this, 'hsforms_legendFlag_callback' ), // callback
			'hsforms-options-admin', // page
			'hsforms_options_setting_section' // section
		);

		add_settings_field(
			'modalTitle', // id
			__('Modal Title', 'wordpress-hsforms'), // title
			array( $this, 'hsforms_modalTitle_callback' ), // callback
			'hsforms-options-admin', // page
			'hsforms_options_setting_section' // section
		);

		add_settings_field(
			'toastrClass', // id
			__('Toastr Class', 'wordpress-hsforms'), // title
			array( $this, 'hsforms_toastrClass_callback' ), // callback
			'hsforms-options-admin', // page
			'hsforms_options_setting_section' // section
		);
	}

	public function hsforms_options_sanitize($input) {
		$sanitary_values = array();
		if ( isset( $input['ibe_link'] ) ) {
			$sanitary_values['ibe_link'] = sanitize_text_field( $input['ibe_link'] );
		}

		if ( isset( $input['minimum_nights'] ) ) {
			$sanitary_values['minimum_nights'] = sanitize_text_field( $input['minimum_nights'] );
		}

		if ( isset( $input['minimum_adults'] ) ) {
			$sanitary_values['minimum_adults'] = sanitize_text_field( $input['minimum_adults'] );
		}

		if ( isset( $input['maximum_adults'] ) ) {
			$sanitary_values['maximum_adults'] = sanitize_text_field( $input['maximum_adults'] );
		}

		if ( isset( $input['minimum_kinder'] ) ) {
			$sanitary_values['minimum_kinder'] = sanitize_text_field( $input['minimum_kinder'] );
		}

		if ( isset( $input['maximum_kinder'] ) ) {
			$sanitary_values['maximum_kinder'] = sanitize_text_field( $input['maximum_kinder'] );
		}

		if ( isset( $input['maximum_kinder_age'] ) ) {
			$sanitary_values['maximum_kinder_age'] = sanitize_text_field( $input['maximum_kinder_age'] );
		}

		if ( isset( $input['minimum_rooms'] ) ) {
			$sanitary_values['minimum_rooms'] = sanitize_text_field( $input['minimum_rooms'] );
		}

		if ( isset( $input['maximum_rooms'] ) ) {
			$sanitary_values['maximum_rooms'] = sanitize_text_field( $input['maximum_rooms'] );
		}

		if ( isset( $input['minimum_persons'] ) ) {
			$sanitary_values['minimum_persons'] = sanitize_text_field( $input['minimum_persons'] );
		}

		if ( isset( $input['maximum_persons'] ) ) {
			$sanitary_values['maximum_persons'] = sanitize_text_field( $input['maximum_persons'] );
		}

		if ( isset( $input['button_label'] ) ) {
			$sanitary_values['button_label'] = sanitize_text_field( $input['button_label'] );
		}

		if ( isset( $input['minlosbuffer'] ) ) {
			$sanitary_values['minlosbuffer'] = filter_var($input['minlosbuffer'], FILTER_SANITIZE_NUMBER_INT);
		}

		if ( isset( $input['allowedParams'] ) ) {
			$sanitary_values['allowedParams'] = sanitize_text_field($input['allowedParams']);
		}

		if ( isset( $input['modalTitle'] ) ) {
			$sanitary_values['modalTitle'] = sanitize_text_field($input['modalTitle']);
		}

		if ( isset( $input['toastrClass'] ) ) {
			$sanitary_values['toastrClass'] = sanitize_text_field($input['toastrClass']);
		}

		if ( isset( $input['keepParams'] ) ) {
			$sanitary_values['keepParams'] = filter_var($input['keepParams'], FILTER_SANITIZE_NUMBER_INT);
		}

		if ( isset( $input['promocodeFlag'] ) ) {
			$sanitary_values['promocodeFlag'] = filter_var($input['promocodeFlag'], FILTER_SANITIZE_NUMBER_INT);
		}

		if ( isset( $input['addRoomFlag'] ) ) {
			$sanitary_values['addRoomFlag'] = filter_var($input['addRoomFlag'], FILTER_SANITIZE_NUMBER_INT);
		}

		if ( isset( $input['ratecodeFlag'] ) ) {
			$sanitary_values['ratecodeFlag'] = filter_var($input['ratecodeFlag'], FILTER_SANITIZE_NUMBER_INT);
		}

		if ( isset( $input['segmentFlag'] ) ) {
			$sanitary_values['segmentFlag'] = filter_var($input['segmentFlag'], FILTER_SANITIZE_NUMBER_INT);
		}

		if ( isset( $input['legendFlag'] ) ) {
			$sanitary_values['legendFlag'] = filter_var($input['legendFlag'], FILTER_SANITIZE_NUMBER_INT);
		}

		if ( isset( $input['days_allowed'] ) ) {
			$daysSelected = (array) $input['days_allowed'];
			$daysAllowed = [];
			for($i = 0; $i < 7; $i++) {
				if(in_array($i, $daysSelected)) {
					$daysAllowed[] = 1;
				} else {
					$daysAllowed[] = 0;
				}
			}
			$sanitary_values['days_allowed'] = $daysAllowed;
		} else {
			$sanitary_values['days_allowed'] = [1,1,1,1,1,1,1];
		}

		return $sanitary_values;
	}

	public function hsforms_options_section_info() {

	}

	public function hsforms_ibe_link_callback() {
		printf(
			'<input class="regular-text" type="text" name="hsforms_options_option_name[ibe_link]" id="ibe_link" value="%s">',
			isset( $this->hsforms_options_options['ibe_link'] ) ? esc_attr( $this->hsforms_options_options['ibe_link']) : ''
		);
	}

	public function hsforms_minimum_nights_callback() {
		printf(
			'<input class="regular-text" type="number" name="hsforms_options_option_name[minimum_nights]" id="minimum_nights" value="%s">',
			isset( $this->hsforms_options_options['minimum_nights'] ) ? esc_attr( $this->hsforms_options_options['minimum_nights']) : ''
		);
	}

	public function hsforms_minimum_adults_callback() {
		printf(
			'<input class="regular-text" type="number" name="hsforms_options_option_name[minimum_adults]" id="minimum_adults" value="%s">',
			isset( $this->hsforms_options_options['minimum_adults'] ) ? esc_attr( $this->hsforms_options_options['minimum_adults']) : ''
		);
	}

	public function hsforms_maximum_adults_callback() {
		printf(
			'<input class="regular-text" type="number" name="hsforms_options_option_name[maximum_adults]" id="maximum_adults" value="%s">',
			isset( $this->hsforms_options_options['maximum_adults'] ) ? esc_attr( $this->hsforms_options_options['maximum_adults']) : ''
		);
	}

	public function hsforms_minimum_kinder_callback() {
		printf(
			'<input class="regular-text" type="number" name="hsforms_options_option_name[minimum_kinder]" id="minimum_kinder" value="%s">',
			isset( $this->hsforms_options_options['minimum_kinder'] ) ? esc_attr( $this->hsforms_options_options['minimum_kinder']) : ''
		);
	}

	public function hsforms_maximum_kinder_callback() {
		printf(
			'<input class="regular-text" type="number" name="hsforms_options_option_name[maximum_kinder]" id="maximum_kinder" value="%s">',
			isset( $this->hsforms_options_options['maximum_kinder'] ) ? esc_attr( $this->hsforms_options_options['maximum_kinder']) : ''
		);
	}

	public function hsforms_maximum_kinder_age_callback() {
		printf(
			'<input class="regular-text" type="number" name="hsforms_options_option_name[maximum_kinder_age]" id="maximum_kinder_age" value="%s">',
			isset( $this->hsforms_options_options['maximum_kinder_age'] ) ? esc_attr( $this->hsforms_options_options['maximum_kinder_age']) : ''
		);
	}

	public function hsforms_minimum_rooms_callback() {
		printf(
			'<input class="regular-text" type="number" name="hsforms_options_option_name[minimum_rooms]" id="minimum_rooms" value="%s">',
			isset( $this->hsforms_options_options['minimum_rooms'] ) ? esc_attr( $this->hsforms_options_options['minimum_rooms']) : ''
		);
	}

	public function hsforms_maximum_rooms_callback() {
		printf(
			'<input class="regular-text" type="number" name="hsforms_options_option_name[maximum_rooms]" id="maximum_rooms" value="%s">',
			isset( $this->hsforms_options_options['maximum_rooms'] ) ? esc_attr( $this->hsforms_options_options['maximum_rooms']) : ''
		);
	}

	public function hsforms_minimum_persons_callback() {
		printf(
			'<input class="regular-text" type="number" name="hsforms_options_option_name[minimum_persons]" id="minimum_persons" value="%s">',
			isset( $this->hsforms_options_options['minimum_persons'] ) ? esc_attr( $this->hsforms_options_options['minimum_persons']) : ''
		);
	}

	public function hsforms_maximum_persons_callback() {
		printf(
			'<input class="regular-text" type="number" name="hsforms_options_option_name[maximum_persons]" id="maximum_persons" value="%s">',
			isset( $this->hsforms_options_options['maximum_persons'] ) ? esc_attr( $this->hsforms_options_options['maximum_persons']) : ''
		);
	}

	public function hsforms_button_label_callback() {
		printf(
			'<input class="regular-text" type="text" name="hsforms_options_option_name[button_label]" id="button_label" value="%s">',
			isset( $this->hsforms_options_options['button_label'] ) ? esc_attr( $this->hsforms_options_options['button_label']) : ''
		);
	}

	public function hsforms_allowedParams_callback() {
		printf(
			'<input class="regular-text" type="text" name="hsforms_options_option_name[allowedParams]" id="allowedParams" value="%s">',
			isset( $this->hsforms_options_options['allowedParams'] ) ? esc_attr( $this->hsforms_options_options['allowedParams']) : ''
		);
	}

	public function hsforms_modalTitle_callback() {
		printf(
			'<input class="regular-text" type="text" name="hsforms_options_option_name[modalTitle]" id="modalTitle" value="%s">',
			isset( $this->hsforms_options_options['modalTitle'] ) ? esc_attr( $this->hsforms_options_options['modalTitle']) : ''
		);
	}

	public function hsforms_toastrClass_callback() {
		printf(
			'<input class="regular-text" type="text" name="hsforms_options_option_name[toastrClass]" id="toastrClass" value="%s">',
			isset( $this->hsforms_options_options['toastrClass'] ) ? esc_attr( $this->hsforms_options_options['toastrClass']) : ''
		);
	}

	public function hsforms_minlosbuffer_callback() {
		$minLosBuffer = (isset( $this->hsforms_options_options['minlosbuffer'] )) ? $this->hsforms_options_options['minlosbuffer'] : '';
		$html = '<input type="checkbox" id="minlosbuffer" name="hsforms_options_option_name[minlosbuffer]" value="1"' . checked( 1, $minLosBuffer, false ) . '/>';
		$html .= '<label for="minlosbuffer">'.__('remove minLOS Buffer', 'wordpress-hsforms').'</label>';
		echo $html;
	}

	public function hsforms_keepParams_callback() {
		$keepParams = (isset( $this->hsforms_options_options['keepParams'] )) ? $this->hsforms_options_options['keepParams'] : '';
		$html = '<input type="checkbox" id="keepParams" name="hsforms_options_option_name[keepParams]" value="1"' . checked( 1, $keepParams, false ) . '/>';
		$html .= '<label for="keepParams">'.__('Keep Parameters', 'wordpress-hsforms').'</label>';
		echo $html;
	}

	public function hsforms_promocodeFlag_callback() {
		$promocodeFlag = (isset( $this->hsforms_options_options['promocodeFlag'] )) ? $this->hsforms_options_options['promocodeFlag'] : '';
		$html = '<input type="checkbox" id="promocodeFlag" name="hsforms_options_option_name[promocodeFlag]" value="1"' . checked( 1, $promocodeFlag, false ) . '/>';
		$html .= '<label for="promocodeFlag">'.__('Show Promotion Code', 'wordpress-hsforms').'</label>';
		echo $html;
	}

	public function hsforms_addRoomFlag_callback() {
		$addRoomFlag = (isset( $this->hsforms_options_options['addRoomFlag'] )) ? $this->hsforms_options_options['addRoomFlag'] : '';
		$html = '<input type="checkbox" id="addRoomFlag" name="hsforms_options_option_name[addRoomFlag]" value="1"' . checked( 1, $addRoomFlag, false ) . '/>';
		$html .= '<label for="addRoomFlag">'.__('Show Add Room Link', 'wordpress-hsforms').'</label>';
		echo $html;
	}

	public function hsforms_ratecodeFlag_callback() {
		$ratecodeFlag = (isset( $this->hsforms_options_options['ratecodeFlag'] )) ? $this->hsforms_options_options['ratecodeFlag'] : '';
		$html = '<input type="checkbox" id="ratecodeFlag" name="hsforms_options_option_name[ratecodeFlag]" value="1"' . checked( 1, $ratecodeFlag, false ) . '/>';
		$html .= '<label for="ratecodeFlag">'.__('Show Ratecodes', 'wordpress-hsforms').'</label>';
		echo $html;
	}

	public function hsforms_segmentFlag_callback() {
		$segmentFlag = (isset( $this->hsforms_options_options['segmentFlag'] )) ? $this->hsforms_options_options['segmentFlag'] : '';
		$html = '<input type="checkbox" id="segmentFlag" name="hsforms_options_option_name[segmentFlag]" value="1"' . checked( 1, $segmentFlag, false ) . '/>';
		$html .= '<label for="segmentFlag">'.__('Show Segments', 'wordpress-hsforms').'</label>';
		echo $html;
	}

	public function hsforms_legendFlag_callback() {
		$legendFlag = (isset( $this->hsforms_options_options['legendFlag'] )) ? $this->hsforms_options_options['legendFlag'] : '';
		$html = '<input type="checkbox" id="legendFlag" name="hsforms_options_option_name[legendFlag]" value="1"' . checked( 1, $legendFlag, false ) . '/>';
		$html .= '<label for="legendFlag">'.__('Show Legends', 'wordpress-hsforms').'</label>';
		echo $html;
	}

	public function hsforms_days_allowed_callback() {
		$daysAllowed = isset(($this->hsforms_options_options['days_allowed'])) ? $this->hsforms_options_options['days_allowed'] : [];
		$days = [__('Monday', 'wordpress-hsforms'), __('Tuesday', 'wordpress-hsforms'), __('Wednesday', 'wordpress-hsforms'), __('Thursday', 'wordpress-hsforms'), __('Friday', 'wordpress-hsforms'), __('Saturday', 'wordpress-hsforms'), __('Sunday', 'wordpress-hsforms')];
		$day_start = date( "d", strtotime( "next Sunday" ) ); // get next Sunday
		echo '<fieldset>';
		foreach($days as $index => $day) {
		?>
			<label for="day_<?php echo $index; ?>">
			<input name="hsforms_options_option_name[days_allowed][]" id="day_<?php echo $index; ?>" type="checkbox" value="<?php echo $index; ?>" <?php echo ( isset($daysAllowed[$index]) && ($daysAllowed[$index] == '1') ) ? 'checked' : '' ; ?> />
			<?php echo $day; ?></label>
		<?php
		}
		echo '</fieldset>';
		}

}
if ( is_admin() )
	$hsforms_options = new HsformsOptions();

// requiring API options page
require_once plugin_dir_path( __FILE__ ) . 'HsformsAPI.php';
